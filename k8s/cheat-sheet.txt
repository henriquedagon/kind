
kind create cluster --config=k8s/kind.yaml --name=<cluster-name>
kind get clusters
kind delete clusters <cluster-name>

https://kubernetes.io/docs/reference/kubectl/cheatsheet/

kubectl cluster-info --context kind-<cluster-name>

kubectl get nodes
kubectl get pods
kubectl get replicasets
kubectl get deployments
kubectl describe pod <pod-name>
kubectl top pod <pod-name>
kubectl delete deployments <name>
kubectl apply -f k8s/deployment.yaml
kubectl apply -f k8s/configmap-env.yaml -f k8s/configmap-family.yaml -f k8s/secret.yaml -f k8s/service.yaml -f k8s/metrics-server.yaml 
kubectl rollout restart deployment <deployment_name>

kubectl port-forward svc/goserver-service <host-port>:<local-port>

kubectl rollout history deployment goserver

docker exec -it kind-control-plane bash
crictl images

watch -n1 kubectl get pods

-------------------
# Teste de stress
kubectl run -it fortio --rm --image=fortio/fortio -- load -qps 800 -t 120s -c 70 "http://goserver-service/healthz"